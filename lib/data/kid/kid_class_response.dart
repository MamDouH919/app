class KidClassResponse {
  String miscMarkup;
  String courseMessage;
  String certificateMarkup;
  String checkMonth;
  String currentMonth;
  String booksMarkup;
  String uniformsMarkup;
  String month;
  List teachers;
  String classPaid;
  String kidClassId;
  String classId;
  String nextPaymentSessionNo;
  String paidUniform;
  String gotUniform;
  String uniformFinancialId;
  String schedule;
  String hasUniform;
  String levelId;
  String classType;
  String compClassId;
  String period;
  String classState;
  String compClassSession;
  String startDate;
  String startingMonth;
  String branch;
  String levelName;
  String sessionsNumber;
  String unpaidMoney;
  String notes;
  String startTime;
  String endTime;
  String currentSessionNumber;
  String nextPaymentDate;

  KidClassResponse(
      {required this.miscMarkup,
      required this.courseMessage,
      required this.certificateMarkup,
      required this.checkMonth,
      required this.currentMonth,
      required this.booksMarkup,
      required this.uniformsMarkup,
      required this.month,
      required this.teachers,
      required this.classPaid,
      required this.kidClassId,
      required this.classId,
      required this.nextPaymentSessionNo,
      required this.paidUniform,
      required this.gotUniform,
      required this.uniformFinancialId,
      required this.schedule,
      required this.hasUniform,
      required this.levelId,
      required this.classType,
      required this.compClassId,
      required this.period,
      required this.classState,
      required this.compClassSession,
      required this.startDate,
      required this.startingMonth,
      required this.branch,
      required this.levelName,
      required this.sessionsNumber,
      required this.unpaidMoney,
      required this.notes,
      required this.startTime,
      required this.endTime,
      required this.currentSessionNumber,
      required this.nextPaymentDate});

  factory KidClassResponse.fromJson(Map<String, dynamic> json) {
    return KidClassResponse(
      miscMarkup: json['misc_markup']!.toString(),
      courseMessage: json['course_message']!.toString(),
      certificateMarkup: json['certificate_markup']!.toString(),
      checkMonth: json['check_month']!.toString(),
      currentMonth: json['current_month']!.toString(),
      booksMarkup: json['books_markup']!.toString(),
      uniformsMarkup: json['uniforms_markup']!.toString(),
      month: json['month']!.toString(),
      teachers: json['teachers'] ?? [],
      classPaid: json['class_paid']!.toString(),
      kidClassId: json['kid_class_id']!.toString(),
      classId: json['class_id']!.toString(),
      nextPaymentDate: json['next-payment_date']!.toString(),
      nextPaymentSessionNo: json['next-payment_session_no']!.toString(),
      paidUniform: json['paid_uniform']!.toString(),
      gotUniform: json['got_uniform']!.toString(),
      uniformFinancialId: json['uniform_financial_id']!.toString(),
      schedule: json['schedule']!.toString(),
      hasUniform: json['has_uniform']!.toString(),
      levelId: json['level_id']!.toString(),
      classType: json['class_type']!.toString(),
      compClassId: json['comp_class_id']!.toString(),
      period: json['period']!.toString(),
      classState: json['class_state']!.toString(),
      compClassSession: json['comp_class_session']!.toString(),
      startDate: json['start_date']!.toString(),
      startingMonth: json['starting_month']!.toString(),
      branch: json['branch']!.toString(),
      levelName: json['level_name']!.toString(),
      sessionsNumber: json['sessions_number']!.toString(),
      unpaidMoney: json['unpaid_money']!.toString(),
      notes: json['notes']!.toString(),
      startTime: json['start_time']!.toString(),
      endTime: json['end_time']!.toString(),
      currentSessionNumber: json['current_session_number']!.toString(),
    );
  }
}
